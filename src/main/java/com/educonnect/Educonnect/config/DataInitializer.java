package com.educonnect.Educonnect.config;

import com.educonnect.Educonnect.entity.Role;
import com.educonnect.Educonnect.repository.RoleRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.stereotype.Component;

@Component
public class DataInitializer implements CommandLineRunner {

    @Autowired
    private RoleRepository roleRepository;

    @Override
    public void run(String... args) throws Exception {
        // Initialiser les r√¥les si la table est vide
        if (roleRepository.count() == 0) {
            System.out.println("üîß Initialisation des r√¥les par d√©faut...");
            
            // Cr√©er et sauvegarder chaque r√¥le bas√© sur l'enum NomRole
            for (Role.NomRole nomRole : Role.NomRole.values()) {
                if (!roleRepository.existsByNomRole(nomRole)) {
                    Role role = new Role();
                    role.setNomRole(nomRole);
                    roleRepository.save(role);
                    System.out.println("‚úÖ R√¥le cr√©√© : " + nomRole);
                }
            }
            
            System.out.println("‚úÖ Tous les r√¥les ont √©t√© initialis√©s avec succ√®s !");
        } else {
            System.out.println("‚ÑπÔ∏è R√¥les d√©j√† pr√©sents dans la base de donn√©es (" + roleRepository.count() + " r√¥le(s))");
            
            // V√©rifier et ajouter les r√¥les manquants
            for (Role.NomRole nomRole : Role.NomRole.values()) {
                if (!roleRepository.existsByNomRole(nomRole)) {
                    Role role = new Role();
                    role.setNomRole(nomRole);
                    roleRepository.save(role);
                    System.out.println("‚úÖ R√¥le manquant ajout√© : " + nomRole);
                }
            }
        }
    }
}
